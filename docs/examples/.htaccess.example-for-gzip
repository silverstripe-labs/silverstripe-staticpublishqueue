### SILVERSTRIPE START ###
<Files *.ss>
	Order deny,allow
	Deny from all
	Allow from 127.0.0.1
</Files>

<Files web.config>
	Order deny,allow
	Deny from all
</Files>

# This denies access to all yml files, since developers might include sensitive
# information in them. See the docs for work-arounds to serve some yaml files
<Files ~ "\.ya?ml$">
	Order allow,deny
	Deny from all
</Files>

ErrorDocument 404 /assets/error-404.html
ErrorDocument 500 /assets/error-500.html

<IfModule mod_alias.c>
	RedirectMatch 403 /silverstripe-cache(/|$)
	RedirectMatch 403 /vendor(/|$)
	RedirectMatch 403 /composer\.(json|lock)
</IfModule>



<IfModule mod_rewrite.c>
	SetEnv HTTP_MOD_REWRITE On
	RewriteEngine On

	## CONFIG FOR STATIC PUBLISHING
	# Cached content - sub-pages (site in the root of a domain)
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond %{REQUEST_METHOD} ^GET|HEAD$
	RewriteCond %{QUERY_STRING} ^$
	RewriteCond %{REQUEST_URI} /(.*[^/])/?$
	RewriteCond %{DOCUMENT_ROOT}/cache/%1.html.gz -f
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule .* /cache/%1.html.gz [L]

	# Cached content - homepage (site in root of a domain)
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond %{REQUEST_METHOD} ^GET|HEAD$
	RewriteCond %{QUERY_STRING} ^$
	RewriteCond %{REQUEST_URI} ^/?$
	RewriteCond %{DOCUMENT_ROOT}/cache/index.html.gz -f
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule .* /cache/index.html.gz [L]

	# Config for site in a subdirectory
	# (START remove the following four rules if site is on root of a domain. E.g. test.com rather than test.com/my-site)
	# Cached content - sub-pages (site in sub-directory)
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond %{REQUEST_METHOD} ^GET|HEAD$
	RewriteCond %{QUERY_STRING} ^$
	RewriteCond %{REQUEST_URI} /(.*[^/])/(.*[^/])/?$
	RewriteCond %{DOCUMENT_ROOT}/%1/cache/%2.html.gz -f
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule .* cache/%2.html.gz [L]

	# Cached content - homepage (site in sub-directory)
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond %{REQUEST_METHOD} ^GET|HEAD$
	RewriteCond %{QUERY_STRING} ^$
	RewriteCond %{REQUEST_URI} ^/(.*[^/])/?$
	RewriteCond %{DOCUMENT_ROOT}/%1/cache/index.html.gz -f
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule .* cache/index.html.gz [L]

	# (END OF: remove the following four rules if site is on root of a domain. E.g. test.com rather than test.com/my-site)

	<FilesMatch "(\.html\.gz)$">
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped &
		# non-gzipped html files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>

	RewriteRule "\.html\.gz$" "-" [T=text/html,E=no-gzip:1]

	## DYNAMIC CONFIG

	# Process through SilverStripe if no file with the requested name exists.
	# Pass through the original path as a query parameter, and retain the existing parameters.
	# Try finding framework in the vendor folder first
	RewriteCond %{REQUEST_URI} ^(.*)$
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule .* index.php

</IfModule>
### SILVERSTRIPE END ###




############### BONUS: Also serve gzipped js / css: ##############

<IfModule mod_headers.c>
	# Serve gzip compressed CSS files if they exist
	# and the client accepts gzip.
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond "%{REQUEST_FILENAME}\.gz" -s
	RewriteRule "^(.*)\.css" "$1\.css\.gz" [QSA]

	# Serve gzip compressed JS files if they exist
	# and the client accepts gzip.
	RewriteCond "%{HTTP:Accept-encoding}" "gzip"
	RewriteCond "%{REQUEST_FILENAME}\.gz" -s
	RewriteRule "^(.*)\.js" "$1\.js\.gz" [QSA]

	# Serve correct content types, and prevent mod_deflate double gzip.
	RewriteRule "\.css\.gz$" "-" [T=text/css,E=no-gzip:1]
	RewriteRule "\.js\.gz$" "-" [T=text/javascript,E=no-gzip:1]

	<FilesMatch "(\.js\.gz|\.css\.gz)$">
		# Serve correct encoding type.
		Header append Content-Encoding gzip

		# Force proxies to cache gzipped &
		# non-gzipped css/js files separately.
		Header append Vary Accept-Encoding
	</FilesMatch>
</IfModule>
